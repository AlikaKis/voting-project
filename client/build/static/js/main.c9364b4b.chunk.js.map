{"version":3,"sources":["components/FormButton/styles.module.scss","pages/employee/styles.module.scss","components/ResultsList/styles.module.scss","pages/employee/pages/turnoutInput/styles.module.scss","pages/main/pages/candidatesList/styles.module.scss","pages/main/pages/results/styles.module.scss","components/FormInput/styles.module.scss","pages/login/styles.module.scss","img/header-logo.svg","context/timeContext.ts","store/reducers/authReducer/types.ts","components/Header/ClockTime.tsx","components/Header/Header.tsx","utils/history.ts","store/reducers/authReducer/index.ts","store/reducers/index.ts","api/votingService.ts","store/index.ts","store/reducers/authReducer/action-creators.ts","img/alert.svg","components/ErrorAlert/ErrorAlert.tsx","components/FormButton/FormButton.tsx","components/FormInput/FormInput.tsx","components/LoadingSpinner/LoadingSpinner.tsx","hooks/useTypedSelector.ts","pages/employee/pages/protocolInput/ProtocolInput.tsx","pages/employee/pages/turnoutInput/TurnoutInput.tsx","pages/employee/Employee.tsx","store/reducers/action-creators.ts","hooks/useActions.ts","img/eye-label.svg","img/login-page-logo.svg","pages/login/Login.tsx","img/candidate.jpg","components/PhotosList/PhotoItem/PhotoItem.tsx","components/PhotosList/PhotosList.tsx","pages/main/pages/candidatesList/CandidatesList.tsx","hooks/useWindowDimensions.ts","components/ResultsList/ResultItem/ResultItem.tsx","components/ResultsList/ResultsList.tsx","hooks/useInterval.ts","routes/index.ts","pages/main/pages/results/Results.tsx","components/TurnoutList/TurnoutItem/TurnoutItem.tsx","components/TurnoutList/TurnoutList.tsx","pages/main/pages/turnout/Turnout.tsx","pages/main/Main.tsx","pages/notFound/NotFound.tsx","components/AppRouter.tsx","components/DevTimeInput/DevTimeInput.tsx","App.tsx","hooks/useDate.ts","index.tsx","components/ResultsList/ResultItem/styles.module.scss","components/TurnoutList/styles.module.scss","components/ErrorAlert/styles.module.scss","components/PhotosList/PhotoItem/styles.module.scss","components/Header/styles.module.scss","components/PhotosList/styles.module.scss","components/TurnoutList/TurnoutItem/styles.module.scss","pages/main/pages/turnout/styles.module.scss","pages/employee/pages/protocolInput/styles.module.scss","components/LoadingSpinner/styles.module.scss","pages/main/styles.module.scss","pages/notFound/styles.module.css","components/DevTimeInput/styles.module.scss"],"names":["module","exports","TimeContext","createContext","displayName","AuthActionsEnum","ClockTime","time","useContext","hours","minutes","Header","memo","isHideClocks","className","classNames","styles","src","HeaderLogoSvg","alt","createBrowserHistory","initialState","access_token","isRefreshing","isTryingToLogin","errorRefreshing","errorLogin","isFirstRefreshDone","API_URLS","auth","state","action","type","CLEAR_AUTH_ACTION","SAVE_NEW_TOKEN_ACTION","payload","IS_REFRESHING_ACTION","IS_TRYING_LOGIN_ACTION","ERROR_REFRESH_ACTION","ERROR_LOGIN_ACTION","rootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","AuthActionCreators","clearAuthState","saveNewToken","setIsRefreshing","setIsTryingLogin","isTryingLogin","setLoginError","error","setRefreshingError","fetchRefreshTokens","dispatch","a","VotingService","refreshTokens","result","data","message","fetchLogin","login","password","setTimeout","fetchLogout","logout","api","axios","create","baseURL","process","withCredentials","headers","interceptors","response","use","undefined","Promise","_","reject","status","config","url","LOGIN","REFRESH_TOKENS","res","Authorization","request","get","post","TURNOUT_INFO","CANDIDATES_INFO","CANDIDATES_AND_AREAS_INFO","DISTRICTS_TURNOUT","RESULTS_INFO","LOGOUT","ErrorAlert","props","AlertSvg","header","description","FormButton","disabled","onClick","children","FormInput","useState","showPassword","setShowPassword","hideLabel","htmlFor","id","labelName","classNameForInput","placeholder","value","onChange","onBlur","showError","hasIcon","name","required","iconUrl","prev","useErrorDisplay","errorMessage","LoadingSpinner","isPrimaryColor","useTypedSelector","useSelector","ProtocolInput","candidates","setCandidates","isLoading","setIsLoading","isError","setIsError","fetchCandidates","getCandidatesInfo","useEffect","validationSchema","yup","shape","bulletinsCount","typeError","min","spoiledBulletinsCount","candidateVotes","of","initialValues","map","item","onSubmit","values","setSubmitting","results","candidate_id","alert","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","render","index","candidate","split","TurnoutInput","votingAreaId","turnoutData","info","setInfo","fetchInfo","getTurnoutInfo","voting_area_id","va_data","votersCount","count_voters","history","push","Employee","location","pathname","path","component","allActionCreators","useActions","useDispatch","bindActionCreators","Login","trim","LogoSvg","EyeSvg","PhotoItem","consigment","PhotoExample","slice","join","PhotosList","length","CandidatesList","isOpenedCount","peopleCount","areasInfo","setAreasInfo","beautyNumber","reverse","reduce","current","getCandidatesAndAreasInfo","count_opened","count_people","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","ResultItem","style","setStyle","isMobileScreen","ResultsList","document","documentElement","clientWidth","setMobileScreen","sort","b","useInterval","RouteNames","callback","delay","intervalRef","useRef","savedCallback","setInterval","clearInterval","Results","turnout","checked_bulletins","votesInfo","setVotesInfo","getResultsInfo","checked_bulletins_percentage","candidate_results","silentFetchInfo","console","log","TurnoutItem","turnoutInfo","district","Math","floor","TurnoutList","setTurnout","fetchTurnout","getDistrictsTurnout","districts_turnout","Turnout","Main","publicRoutes","MAIN_PAGE","exact","MAIN_PAGE_SCREENS","LOGIN_PAGE","privateRoutes","EMPLOYEE_PAGE","NotFound","to","AppRouter","route","DevTimeInput","setHours","setMinutes","isDevUsing","setIsDevUsing","setCustomTime","clearCustomTime","savedHours","localStorage","getItem","savedMinutes","realTimeSeconds","parseInt","toString","e","preventDefault","Date","getTime","setItem","currentTarget","removeItem","App","date","setDate","devTime","setDevTime","updateDevTime","curTime","currentTime","passedSeconds","realTimeInSeconds","passedHours","passedMinutes","getFullYear","getMonth","getDay","getSeconds","day","getDate","getHours","getMinutes","useDate","includes","Provider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9364b4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-button\":\"styles_form-button__1a9eb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employee-page\":\"styles_employee-page__2S5I5\",\"employee-page__header\":\"styles_employee-page__header__XpJJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results-list\":\"styles_results-list__2ZV57\",\"results-list_empty\":\"styles_results-list_empty__3Pi1W\",\"results-list__error\":\"styles_results-list__error__3ptIR\",\"error-text\":\"styles_error-text__FoSbX\",\"error-btn\":\"styles_error-btn__3_Z0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"voters\":\"styles_voters__3Jknw\",\"voters_empty\":\"styles_voters_empty__2lt94\",\"voters__error\":\"styles_voters__error__3tuGZ\",\"error-text\":\"styles_error-text__37e3l\",\"error-btn\":\"styles_error-btn__7LJrp\",\"voters__results\":\"styles_voters__results__2Tl8T\",\"resluts-table\":\"styles_resluts-table__1S1ax\",\"resluts-table__header\":\"styles_resluts-table__header__3WZv-\",\"voters__content-container\":\"styles_voters__content-container__2e0FJ\",\"content\":\"styles_content__2CPue\",\"voters-form\":\"styles_voters-form__iTBdL\",\"voters-form__description\":\"styles_voters-form__description__3NLAv\",\"voters-form__time-left\":\"styles_voters-form__time-left__LkVLu\",\"voters-form__main-error\":\"styles_voters-form__main-error__294MO\",\"voters-form__main-error_showing\":\"styles_voters-form__main-error_showing__71w56\",\"first-voters-form__description\":\"styles_first-voters-form__description__1PS1J\",\"first-voters-form__time-left\":\"styles_first-voters-form__time-left__1Saql\",\"first-voters-form__main-error\":\"styles_first-voters-form__main-error__XfA_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"candidates\":\"styles_candidates__3XXL0\",\"candidates__voting-areas\":\"styles_candidates__voting-areas__3wQXi\",\"voting-areas__info-block\":\"styles_voting-areas__info-block__2_JbY\",\"voting-areas__name\":\"styles_voting-areas__name__1U2SG\",\"voting-areas__value\":\"styles_voting-areas__value__1PcBy\",\"candidates__candidates-list\":\"styles_candidates__candidates-list__3ctqF\",\"candidates_empty\":\"styles_candidates_empty__qST_j\",\"candidates__error\":\"styles_candidates__error___SnR6\",\"error-text\":\"styles_error-text__2dX8_\",\"error-btn\":\"styles_error-btn__q0EXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"styles_results__1QdWF\",\"results__statistics\":\"styles_results__statistics__X-BY2\",\"info\":\"styles_info__1Q3Kd\",\"info__result\":\"styles_info__result__1nj5z\",\"results__list\":\"styles_results__list__ZR3Jq\",\"results_empty\":\"styles_results_empty__23ihD\",\"results__error\":\"styles_results__error__3i6sp\",\"error-text\":\"styles_error-text__38QPZ\",\"error-btn\":\"styles_error-btn__13iEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-input\":\"styles_form-input__1t8R0\",\"form-input__label\":\"styles_form-input__label__3HEZ7\",\"form-input__input-wrapper\":\"styles_form-input__input-wrapper__2DkJU\",\"form-input__input\":\"styles_form-input__input__3a2wq\",\"form-input__input_with-icon\":\"styles_form-input__input_with-icon__2ANgF\",\"form-input__input_error\":\"styles_form-input__input_error__1edUa\",\"form-input__input-icon\":\"styles_form-input__input-icon__28QMT\",\"form-input__error\":\"styles_form-input__error__kqGel\",\"form-input__error_display\":\"styles_form-input__error_display__3O_sq\",\"form-input__error_showing\":\"styles_form-input__error_showing__1014B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-page\":\"styles_login-page__2N2_e\",\"login-page__header\":\"styles_login-page__header__CwIK-\",\"login-page__picture\":\"styles_login-page__picture__1JfiC\",\"login-page__content-container\":\"styles_login-page__content-container__2j19G\",\"content\":\"styles_content__2Mzyn\",\"login-form\":\"styles_login-form__2mJDG\",\"login-form__description\":\"styles_login-form__description__TBp_p\",\"login-form__main-error\":\"styles_login-form__main-error__1nbnt\",\"login-form__main-error_showing\":\"styles_login-form__main-error_showing__19QVM\"};","export default __webpack_public_path__ + \"static/media/header-logo.edb235c9.svg\";","import { createContext } from 'react';\n\ninterface ITimeContext {\n  time: { hours: number; minutes: number };\n  day: number;\n  clearCustomTime: () => void;\n  setCustomTime: (hours: number, minutes: number, realTimeInSeconds?: number) => void;\n}\n\nconst TimeContext = createContext({} as ITimeContext);\n\nTimeContext.displayName = 'timeContext';\n\nexport default TimeContext;\n","export interface AuthState {\n  access_token: string | null;\n  isRefreshing: boolean;\n  isTryingToLogin: boolean;\n  errorRefreshing: string | null;\n  errorLogin: string | null;\n  isFirstRefreshDone: boolean;\n}\n\nexport enum AuthActionsEnum {\n  CLEAR_AUTH_ACTION = 'CLEAR_AUTH_ACTION',\n  SAVE_NEW_TOKEN_ACTION = 'SAVE_NEW_TOKEN_ACTION',\n  IS_REFRESHING_ACTION = 'IS_REFRESHING_ACTION',\n  IS_TRYING_LOGIN_ACTION = 'IS_TRYING_LOGIN_ACTION',\n  ERROR_LOGIN_ACTION = 'ERROR_LOGIN_ACTION',\n  ERROR_REFRESH_ACTION = 'ERROR_REFRESH_ACTION',\n}\n\nexport interface ClearAuthAction {\n  type: AuthActionsEnum.CLEAR_AUTH_ACTION;\n}\n\nexport interface SaveNewTokenAction {\n  type: AuthActionsEnum.SAVE_NEW_TOKEN_ACTION;\n  payload: string;\n}\n\nexport interface SetIsTokenRefreshingAction {\n  type: AuthActionsEnum.IS_REFRESHING_ACTION;\n  payload: boolean;\n}\n\nexport interface SetIsTryingToLoginAction {\n  type: AuthActionsEnum.IS_TRYING_LOGIN_ACTION;\n  payload: boolean;\n}\n\nexport interface SetRefreshingErrorAction {\n  type: AuthActionsEnum.ERROR_REFRESH_ACTION;\n  payload: string | null;\n}\n\nexport interface SetLoginErrorAction {\n  type: AuthActionsEnum.ERROR_LOGIN_ACTION;\n  payload: string | null;\n}\n\nexport type AuthAction =\n  | ClearAuthAction\n  | SaveNewTokenAction\n  | SetIsTokenRefreshingAction\n  | SetIsTryingToLoginAction\n  | SetRefreshingErrorAction\n  | SetLoginErrorAction;\n","import { FC, useContext } from 'react';\n\nimport TimeContext from '../../context/timeContext';\n\nconst ClockTime: FC = () => {\n  const { time } = useContext(TimeContext);\n  return (\n    <>\n      {time.hours < 10 ? '0' + time.hours : time.hours}:\n      {time.minutes < 10 ? '0' + time.minutes : time.minutes}\n    </>\n  );\n};\n\nexport default ClockTime;\n","import classNames from 'classnames';\nimport { FC, memo } from 'react';\n\nimport HeaderLogoSvg from '../../img/header-logo.svg';\nimport ClockTime from './ClockTime';\nimport styles from './styles.module.scss';\n\ninterface HeaderProps {\n  isHideClocks?: boolean;\n  className?: string;\n}\n\nconst Header: FC<HeaderProps> = memo(function Header({\n  isHideClocks = false,\n  className,\n}) {\n  return (\n    <header className={classNames(styles['header'], className ? className : null)}>\n      <p\n        className={classNames(\n          styles['header__clock'],\n          isHideClocks ? styles['header__clock_hidden'] : null,\n        )}>\n        <ClockTime />\n      </p>\n      <img\n        src={HeaderLogoSvg}\n        alt=\"Выборы мэра Москвы лого\"\n        className={styles['header__logo']}\n      />\n    </header>\n  );\n});\n\nexport default Header;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { AuthAction, AuthActionsEnum, AuthState } from './types';\n\nconst initialState: AuthState = {\n  access_token: null,\n  isRefreshing: true,\n  isTryingToLogin: false,\n  errorRefreshing: null,\n  errorLogin: null,\n  isFirstRefreshDone: false,\n};\n\nexport default function exampleReducer(\n  state = initialState,\n  action: AuthAction,\n): AuthState {\n  switch (action.type) {\n    case AuthActionsEnum.CLEAR_AUTH_ACTION:\n      return { ...initialState, isFirstRefreshDone: true };\n    case AuthActionsEnum.SAVE_NEW_TOKEN_ACTION:\n      return { ...state, access_token: action.payload, isFirstRefreshDone: true };\n    case AuthActionsEnum.IS_REFRESHING_ACTION:\n      return { ...state, isRefreshing: action.payload };\n    case AuthActionsEnum.IS_TRYING_LOGIN_ACTION:\n      return { ...state, isTryingToLogin: action.payload };\n    case AuthActionsEnum.ERROR_REFRESH_ACTION:\n      return { ...state, errorRefreshing: action.payload };\n    case AuthActionsEnum.ERROR_LOGIN_ACTION:\n      return { ...state, errorLogin: action.payload };\n    default:\n      return state;\n  }\n}\n","import auth from './authReducer';\n\nexport default {\n  auth,\n};\n","import axios, { AxiosError, AxiosResponse } from 'axios';\n\nimport { store } from '../store';\nimport { AuthActionCreators } from '../store/reducers/authReducer/action-creators';\n\nconst { dispatch } = store;\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport enum API_URLS {\n  REFRESH_TOKENS = '/auth/refresh-tokens',\n  LOGIN = '/auth/login',\n  LOGOUT = '/auth/logout',\n  CANDIDATES_AND_AREAS_INFO = '/candidate-va-info',\n  DISTRICTS_TURNOUT = '/districts-turnout',\n  RESULTS_INFO = '/results',\n  TURNOUT_INFO = '/user-turnout',\n  CANDIDATES_INFO = '/user-results',\n}\n\napi.interceptors.response.use(undefined, async (error: AxiosError) => {\n  if (!error.response) {\n    return new Promise((_, reject) => {\n      reject(error);\n    });\n  }\n\n  if (error.response.status === 403) {\n    if (error.response.config.url === API_URLS.LOGIN) {\n      return new Promise((_, reject) => {\n        reject(error);\n      });\n    } else if (error.response.config.url === API_URLS.REFRESH_TOKENS) {\n      dispatch(AuthActionCreators.clearAuthState());\n      return new Promise((_, reject) => {\n        reject(error);\n      });\n    } else {\n      try {\n        const res = await VotingService.refreshTokens();\n        dispatch(AuthActionCreators.saveNewToken(res.data.access_token));\n        error.config.headers.Authorization = `Bearer ${res.data.access_token}`;\n        return api.request(error.config);\n      } catch (_) {\n        return new Promise((_, reject) => {\n          reject(error);\n        });\n      }\n    }\n  } else {\n    return new Promise((_, reject) => {\n      reject(error);\n    });\n  }\n});\n\nexport default class VotingService {\n  static async refreshTokens(): Promise<AxiosResponse<{ access_token: string }>> {\n    return api.get<{ access_token: string }>(API_URLS.REFRESH_TOKENS);\n  }\n  static async login(\n    login: string,\n    password: string,\n  ): Promise<AxiosResponse<{ access_token: string }>> {\n    return api.post<{ access_token: string }>(API_URLS.LOGIN, {\n      login,\n      password,\n    });\n  }\n\n  static async getUserInfo(access_token: string): Promise<AxiosResponse<any>> {\n    return api.get<any>('/user-info', {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async getTurnoutInfo(access_token: string): Promise<\n    AxiosResponse<{\n      voting_area_id: number;\n      va_data: [\n        {\n          time: string;\n          count_voters: number;\n        },\n      ];\n    }>\n  > {\n    return api.get<{\n      voting_area_id: number;\n      va_data: [\n        {\n          time: string;\n          count_voters: number;\n        },\n      ];\n    }>(API_URLS.TURNOUT_INFO, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async getCandidatesInfo(access_token: string): Promise<\n    AxiosResponse<{\n      candidates: Array<{\n        candidate_id: number;\n        candidate: string;\n      }>;\n    }>\n  > {\n    return api.get<{\n      candidates: Array<{\n        candidate_id: number;\n        candidate: string;\n      }>;\n    }>(API_URLS.CANDIDATES_INFO, {\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n  }\n\n  static async getCandidatesAndAreasInfo(): Promise<\n    AxiosResponse<{\n      info: Array<{\n        candidate_id: number;\n        candidate: string;\n        consigment: string;\n      }>;\n      count_opened: number;\n      count_people: number;\n    }>\n  > {\n    return api.get<{\n      info: Array<{\n        candidate_id: number;\n        candidate: string;\n        consigment: string;\n      }>;\n      count_opened: number;\n      count_people: number;\n    }>(API_URLS.CANDIDATES_AND_AREAS_INFO);\n  }\n\n  static async getDistrictsTurnout(): Promise<AxiosResponse<any>> {\n    return api.get<{\n      districts_turnout: Array<{\n        district: string;\n        turnout: number;\n      }>;\n    }>(API_URLS.DISTRICTS_TURNOUT);\n  }\n\n  static async getResultsInfo(): Promise<\n    AxiosResponse<{\n      candidate_results: Array<{\n        candidate_id: number;\n        candidate: string;\n        result: number;\n      }>;\n      turnout: number;\n      checked_bulletins_percentage: number;\n    }>\n  > {\n    return api.get<{\n      candidate_results: Array<{\n        candidate_id: number;\n        candidate: string;\n        result: number;\n      }>;\n      turnout: number;\n      checked_bulletins_percentage: number;\n    }>(API_URLS.RESULTS_INFO);\n  }\n\n  static async logout(): Promise<AxiosResponse<{ message: string }>> {\n    return api.get<{ message: string }>(API_URLS.LOGOUT);\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { AxiosError } from 'axios';\n\nimport VotingService from '../../../api/votingService';\nimport { AppDispatch } from '../..';\nimport {\n  AuthActionsEnum,\n  ClearAuthAction,\n  SaveNewTokenAction,\n  SetIsTokenRefreshingAction,\n  SetIsTryingToLoginAction,\n  SetLoginErrorAction,\n  SetRefreshingErrorAction,\n} from './types';\n\nexport const AuthActionCreators = {\n  clearAuthState: (): ClearAuthAction => ({\n    type: AuthActionsEnum.CLEAR_AUTH_ACTION,\n  }),\n  saveNewToken: (access_token: string): SaveNewTokenAction => ({\n    type: AuthActionsEnum.SAVE_NEW_TOKEN_ACTION,\n    payload: access_token,\n  }),\n  setIsRefreshing: (isRefreshing: boolean): SetIsTokenRefreshingAction => ({\n    type: AuthActionsEnum.IS_REFRESHING_ACTION,\n    payload: isRefreshing,\n  }),\n  setIsTryingLogin: (isTryingLogin: boolean): SetIsTryingToLoginAction => ({\n    type: AuthActionsEnum.IS_TRYING_LOGIN_ACTION,\n    payload: isTryingLogin,\n  }),\n  setLoginError: (error: string | null): SetLoginErrorAction => ({\n    type: AuthActionsEnum.ERROR_LOGIN_ACTION,\n    payload: error,\n  }),\n  setRefreshingError: (error: string | null): SetRefreshingErrorAction => ({\n    type: AuthActionsEnum.ERROR_REFRESH_ACTION,\n    payload: error,\n  }),\n  fetchRefreshTokens: () => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsRefreshing(true));\n      dispatch(AuthActionCreators.setRefreshingError(null));\n      const result = await VotingService.refreshTokens();\n      dispatch(AuthActionCreators.saveNewToken(result.data.access_token));\n      dispatch(AuthActionCreators.setIsRefreshing(false));\n    } catch (error) {\n      dispatch(AuthActionCreators.clearAuthState());\n      dispatch(\n        AuthActionCreators.setRefreshingError((error as AxiosError<string>).message),\n      );\n    }\n  },\n  fetchLogin: (login: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsTryingLogin(true));\n      dispatch(AuthActionCreators.setLoginError(null));\n      const result = await VotingService.login(login, password);\n      dispatch(AuthActionCreators.saveNewToken(result.data.access_token));\n      dispatch(AuthActionCreators.setIsTryingLogin(false));\n    } catch (error) {\n      dispatch(AuthActionCreators.setIsTryingLogin(false));\n      dispatch(AuthActionCreators.setLoginError((error as AxiosError<string>).message));\n      setTimeout(() => {\n        dispatch(AuthActionCreators.setLoginError(null));\n      }, 2000);\n    }\n  },\n  fetchLogout: () => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsTryingLogin(true));\n      await VotingService.logout();\n      dispatch(AuthActionCreators.clearAuthState());\n    } catch (error) {\n      dispatch(AuthActionCreators.clearAuthState());\n    }\n  },\n};\n","export default __webpack_public_path__ + \"static/media/alert.d3f61112.svg\";","import classNames from 'classnames';\nimport { FC } from 'react';\n\nimport AlertSvg from '../../img/alert.svg';\nimport styles from './styles.module.scss';\n\ninterface ErrorAlertProps {\n  header: string;\n  description: string;\n  className?: string;\n}\n\nconst ErrorAlert: FC<ErrorAlertProps> = (props) => {\n  return (\n    <div\n      className={classNames(\n        styles['error-alert'],\n        props.className ? props.className : null,\n      )}>\n      <img src={AlertSvg} alt=\"Error img\" className={styles['error-alert__icon']} />\n      <div className={styles['error-alert__content']}>\n        <span className={styles['error-alert__header']}>{props.header}</span>\n        <span className={styles['error-alert__description']}>{props.description}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorAlert;\n","import classNames from 'classnames';\nimport { FC, ReactNode } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface FormButtonProps {\n  type: 'button' | 'submit';\n  className?: string;\n  disabled: boolean;\n  children: ReactNode;\n  onClick?: () => void;\n}\n\nconst FormButton: FC<FormButtonProps> = (props) => {\n  return (\n    <button\n      type={props.type}\n      className={classNames(styles['form-button'], props.className)}\n      disabled={props.disabled}\n      onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default FormButton;\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface FormInputProps {\n  type: string;\n  value: any;\n  onChange: any;\n  onBlur: any;\n  className?: string;\n  classNameForInput?: string;\n  showError: boolean;\n  errorMessage: string;\n  labelName: string;\n  name: string;\n  id: string;\n  required: boolean;\n  hasIcon?: boolean;\n  iconUrl?: string;\n  placeholder?: string;\n  hideLabel?: boolean;\n  useErrorDisplay?: boolean;\n}\n\nconst FormInput: FC<FormInputProps> = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <div\n      className={classNames(\n        styles['form-input'],\n        props.className ? props.className : null,\n      )}>\n      {!props.hideLabel ? (\n        <label htmlFor={props.id} className={styles['form-input__label']}>\n          {props.labelName}\n        </label>\n      ) : null}\n\n      <div\n        className={classNames(\n          styles['form-input__input-wrapper'],\n          props.classNameForInput ? props.classNameForInput : null,\n        )}>\n        <input\n          type={showPassword ? 'text' : props.type}\n          placeholder={props.placeholder || ''}\n          value={props.value}\n          onChange={props.onChange}\n          onBlur={props.onBlur}\n          className={classNames(\n            styles['form-input__input'],\n            props.showError ? styles['form-input__input_error'] : null,\n            props.hasIcon ? styles['form-input__input_with-icon'] : null,\n          )}\n          id={props.id}\n          name={props.name}\n          required={props.required}\n        />\n        {props.hasIcon && props.iconUrl ? (\n          <img\n            src={props.iconUrl}\n            alt=\"\"\n            className={styles['form-input__input-icon']}\n            onClick={() => {\n              setShowPassword((prev) => !prev);\n            }}\n          />\n        ) : null}\n      </div>\n\n      <small\n        className={classNames(\n          styles['form-input__error'],\n          props.useErrorDisplay ? styles['form-input__error_display'] : null,\n          props.showError ? styles['form-input__error_showing'] : null,\n        )}>\n        {props.errorMessage}\n      </small>\n    </div>\n  );\n};\n\nexport default FormInput;\n","import classNames from 'classnames';\nimport { FC } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface LoadingSpinnerProps {\n  className?: string;\n  isPrimaryColor?: boolean;\n}\n\nconst LoadingSpinner: FC<LoadingSpinnerProps> = ({ className, isPrimaryColor }) => {\n  return (\n    <div\n      className={classNames(\n        styles['spinner'],\n        isPrimaryColor ? styles['spinner_primary-color'] : null,\n        className ? className : null,\n      )}></div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\n\nimport { RootState } from '../store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport { Field, FieldArray, Formik } from 'formik';\nimport { FC, useEffect, useState } from 'react';\nimport * as yup from 'yup';\n\nimport VotingService from '../../../../api/votingService';\nimport ErrorAlert from '../../../../components/ErrorAlert/ErrorAlert';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport FormInput from '../../../../components/FormInput/FormInput';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\n// import history from '../../../../utils/history';\nimport styles from './styles.module.scss';\n\nconst ProtocolInput: FC = () => {\n  const { access_token } = useTypedSelector((state) => state.auth);\n  const [candidates, setCandidates] = useState<\n    {\n      candidate_id: number;\n      candidate: string;\n    }[]\n  >([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const fetchCandidates = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getCandidatesInfo(access_token!)).data;\n        setCandidates(result.candidates);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCandidates();\n  }, []);\n\n  const validationSchema = yup.object().shape({\n    bulletinsCount: yup\n      .number()\n      .typeError('Должно быть числом')\n      .min(0, 'Не может быть меньше 0')\n      .required('Обязательное поле'),\n    spoiledBulletinsCount: yup\n      .number()\n      .typeError('Должно быть числом')\n      .min(0, 'Не может быть меньше 0')\n      .required('Обязательное поле'),\n    candidateVotes: yup\n      .array()\n      .of(\n        yup.object().shape({\n          value: yup\n            .number()\n            .typeError('Должно быть числом')\n            .min(0, 'Не может быть меньше 0')\n            .required('Обязательное поле'),\n        }),\n      )\n      .required('Необходимо заполнить голоса'),\n  });\n  return (\n    <div\n      className={classNames(\n        styles['protocol'],\n        isError || isLoading ? styles['protocol_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['protocol__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['protocol__error']}>\n          <span className={styles['error-text']}>\n            Произошла ошибка. Проверьте соединение с интернетом\n          </span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchCandidates}>\n            Перезагрузить данные\n          </FormButton>\n        </div>\n      ) : (\n        <Formik\n          initialValues={{\n            bulletinsCount: 0,\n            spoiledBulletinsCount: 0,\n            candidateVotes: [...candidates.map((item) => ({ ...item, value: 0 }))],\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              setSubmitting(false);\n              const results = {\n                bulletinsCount: values.bulletinsCount,\n                spoiledBulletinsCount: values.spoiledBulletinsCount,\n                candidateVotes: values.candidateVotes.map((item) => ({\n                  id: item.candidate_id,\n                  value: item.value,\n                })),\n              };\n              alert(`На сервер отправились данные : ${JSON.stringify(results, null, 2)}`);\n            }, 1000);\n          }}>\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            isValid,\n          }) => (\n            <form\n              onSubmit={handleSubmit}\n              className={classNames(styles['protocol__form'], styles['protocol-form'])}>\n              <div className={classNames(styles['protocol-form__wrapper'])}>\n                <div\n                  className={classNames(\n                    styles['protocol-form__bulletins'],\n                    styles['bulletins'],\n                  )}>\n                  <p className={styles['protocol-form__description']}>\n                    Введите количество <br />{' '}\n                    <span className={'bold-text'}>обработанных </span> бюллетеней\n                  </p>\n                  <FormInput\n                    labelName=\"Явка\"\n                    id=\"bulletinsCount\"\n                    name=\"bulletinsCount\"\n                    type=\"number\"\n                    value={values.bulletinsCount}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    errorMessage={errors.bulletinsCount || ''}\n                    required\n                    showError={!!(touched.bulletinsCount && errors.bulletinsCount)}\n                    hideLabel\n                    className={styles['bulletins__input']}\n                    classNameForInput={styles['bulletins__input-block']}\n                  />\n                  <p className={styles['protocol-form__description']}>\n                    Введите количество <br />{' '}\n                    <span className={'bold-text'}>испорченных </span> бюллетеней\n                  </p>\n                  <FormInput\n                    labelName=\"Явка\"\n                    id=\"spoiledBulletinsCount\"\n                    name=\"spoiledBulletinsCount\"\n                    type=\"number\"\n                    value={values.spoiledBulletinsCount}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    errorMessage={errors.spoiledBulletinsCount || ''}\n                    required={true}\n                    showError={\n                      !!(touched.spoiledBulletinsCount && errors.spoiledBulletinsCount)\n                    }\n                    hideLabel\n                    className={styles['bulletins__input']}\n                    classNameForInput={styles['bulletins__input-block']}\n                  />\n                </div>\n                <div\n                  className={classNames(styles['protocol-form__votes'], styles['votes'])}>\n                  <p className={styles['protocol-form__description']}>\n                    Введите <span className={'bold-text'}>количество</span> голосов по\n                    кандидатам\n                  </p>\n                  <FieldArray\n                    name=\"candidateVotes\"\n                    render={() => (\n                      <div className={styles['votes__candidate-list']}>\n                        {values.candidateVotes.map((item, index) => (\n                          <div\n                            key={index}\n                            className={classNames(\n                              styles['votes__input-block'],\n                              errors.candidateVotes && errors.candidateVotes[index]\n                                ? styles['votes__input-block_error']\n                                : null,\n                            )}>\n                            <label\n                              htmlFor={`candidateVotes[${index}]`}\n                              className={styles['votes__label']}>\n                              {item.candidate.split(' ')[0] +\n                                ' ' +\n                                item.candidate.split(' ')[1][0] +\n                                '. ' +\n                                item.candidate.split(' ')[2][0] +\n                                '.'}\n                            </label>\n                            <Field\n                              type=\"number\"\n                              name={`candidateVotes[${index}].value`}\n                              id={`candidateVotes[${index}]`}\n                              required\n                              className={styles['votes__input']}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  />\n                </div>\n              </div>\n\n              <ErrorAlert\n                header=\"Ошибка отправки\"\n                description=\"Проверьте данные и попробуйте ещё раз\"\n                className={classNames(\n                  styles['protocol-form__main-error'],\n                  styles['protocol-form__main-error_hidden'],\n                )}\n              />\n              <p\n                className={classNames(\n                  styles['protocol-form__time-left'],\n                  styles['protocol-form__time-left_hidden'],\n                )}>\n                до конца ввода данных протокола <span className={'bold-text'}>18</span>{' '}\n                минут{' '}\n              </p>\n              <FormButton\n                type=\"submit\"\n                disabled={!isValid && isSubmitting}\n                className={styles['protocol-form__submit-btn']}>\n                {isSubmitting ? <LoadingSpinner /> : 'Отправить'}\n              </FormButton>\n            </form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nexport default ProtocolInput;\n","import classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { FC, useEffect, useState } from 'react';\nimport * as yup from 'yup';\n\nimport VotingService from '../../../../api/votingService';\nimport ErrorAlert from '../../../../components/ErrorAlert/ErrorAlert';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport FormInput from '../../../../components/FormInput/FormInput';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport history from '../../../../utils/history';\nimport styles from './styles.module.scss';\n\nconst TurnoutInput: FC = () => {\n  const { access_token } = useTypedSelector((state) => state.auth);\n  const [info, setInfo] = useState<{\n    votingAreaId: number;\n    turnoutData: {\n      time: string;\n      count_voters: number;\n    }[];\n  }>({\n    votingAreaId: 0,\n    turnoutData: [],\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getTurnoutInfo(access_token!)).data;\n        setInfo({\n          votingAreaId: result.voting_area_id,\n          turnoutData: result.va_data,\n        });\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  const validationSchema = yup.object().shape({\n    votersCount: yup\n      .number()\n      .typeError('Должно быть числом')\n      .min(0, 'Не может быть меньше 0')\n      .required('Обязательное поле'),\n  });\n  return (\n    <div\n      className={classNames(\n        styles['voters'],\n        isError || isLoading ? styles['voters_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['voters__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['voters__error']}>\n          <span className={styles['error-text']}>\n            Произошла ошибка. Проверьте соединение с интернетом\n          </span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Перезагрузить данные\n          </FormButton>\n        </div>\n      ) : (\n        <>\n          <div className={styles['voters__results']}>\n            <table className={styles['resluts-table']}>\n              <caption className={styles['resluts-table__header']}>\n                Участок №{info.votingAreaId}\n              </caption>\n              <thead>\n                <tr>\n                  <th>Время</th>\n                  <th>Явка, чел.</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>12:00</td>\n                  <td>{info.turnoutData[0]?.count_voters || 'Ожидается ввод'}</td>\n                </tr>\n                <tr>\n                  <td>15:00</td>\n                  <td>{info.turnoutData[1]?.count_voters || 'Ожидается ввод'}</td>\n                </tr>\n                <tr>\n                  <td>18:00</td>\n                  <td>{info.turnoutData[2]?.count_voters || 'Ожидается ввод'}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className={styles['voters__content-container']}>\n            <div className={styles['content']}>\n              <Formik\n                initialValues={{ votersCount: 0 }}\n                validationSchema={validationSchema}\n                onSubmit={(values, { setSubmitting }) => {\n                  setTimeout(() => {\n                    setSubmitting(false);\n                    alert(`На сервер отправились данные : ${JSON.stringify(values)}`);\n                    history.push('/employee-page/protocol');\n                  }, 1000);\n                }}>\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                }) => (\n                  <form onSubmit={handleSubmit} className={styles['voters-form']}>\n                    <ErrorAlert\n                      header=\"Ошибка отправки\"\n                      description=\"Проверьте данные и попробуйте ещё раз\"\n                      className={classNames(styles['voters-form__main-error'])}\n                    />\n                    <p className={styles['voters-form__description']}>\n                      Введите <span className={'bold-text'}>количество </span>{' '}\n                      избирателей, явившихся на участок к{' '}\n                      <span className={'bold-text'}>20:00</span>\n                    </p>\n\n                    <FormInput\n                      labelName=\"Явка\"\n                      id=\"votersCount\"\n                      name=\"votersCount\"\n                      type=\"number\"\n                      value={values.votersCount}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      errorMessage={errors.votersCount || ''}\n                      required={true}\n                      showError={!!(touched.votersCount && errors.votersCount)}\n                      hideLabel\n                      useErrorDisplay\n                    />\n                    <p className={styles['voters-form__time-left']}>\n                      до конца ввода явки <span className={styles['time-count']}>18</span>{' '}\n                      минут{' '}\n                    </p>\n                    <FormButton type=\"submit\" disabled={!isValid && isSubmitting}>\n                      {isSubmitting ? <LoadingSpinner /> : 'Отправить'}\n                    </FormButton>\n                  </form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TurnoutInput;\n","import { FC, useContext, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Header from '../../components/Header/Header';\nimport TimeContext from '../../context/timeContext';\nimport history from '../../utils/history';\nimport ProtocolInput from './pages/protocolInput/ProtocolInput';\n// import FirstVotersInput from './pages/firstVotersInput/FirstVotersInput';\nimport TurnoutInput from './pages/turnoutInput/TurnoutInput';\nimport styles from './styles.module.scss';\n\nconst Employee: FC = () => {\n  const {\n    time: { minutes, hours },\n  } = useContext(TimeContext);\n\n  useEffect(() => {\n    if (hours < 21 && history.location.pathname !== '/employee-page/turnout') {\n      history.push('/employee-page/turnout');\n    }\n    if (hours >= 21 && history.location.pathname !== '/employee-page/protocol') {\n      history.push('/employee-page/protocol');\n    }\n  }, [minutes, hours]);\n\n  return (\n    <div className={styles['employee-page']}>\n      <Header />\n      <Switch>\n        {/* <Route path=\"/employee-page\" exact component={FirstVotersInput} /> */}\n        <Route path=\"/employee-page/turnout\" component={TurnoutInput} />\n        <Route path=\"/employee-page/protocol\" component={ProtocolInput} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Employee;\n","import { AuthActionCreators } from './authReducer/action-creators';\n\nexport const allActionCreators = {\n  ...AuthActionCreators,\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { allActionCreators } from '../store/reducers/action-creators';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","export default __webpack_public_path__ + \"static/media/eye-label.d06f4e35.svg\";","export default __webpack_public_path__ + \"static/media/login-page-logo.296fa5e3.svg\";","import classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { FC } from 'react';\nimport * as yup from 'yup';\n\nimport ErrorAlert from '../../components/ErrorAlert/ErrorAlert';\nimport FormButton from '../../components/FormButton/FormButton';\nimport FormInput from '../../components/FormInput/FormInput';\nimport Header from '../../components/Header/Header';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport EyeSvg from '../../img/eye-label.svg';\nimport LogoSvg from '../../img/login-page-logo.svg';\nimport styles from './styles.module.scss';\n\nconst Login: FC = () => {\n  const { fetchLogin } = useActions();\n  const { errorLogin, isTryingToLogin } = useTypedSelector((state) => state.auth);\n  const validationSchema = yup.object().shape({\n    login: yup\n      .string()\n      .typeError('Должно быть строкой')\n      .trim()\n      .required('Обязательное поле'),\n    password: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n  });\n  return (\n    <div className={styles['login-page']}>\n      <Header className={styles['login-page__header']} />\n      <div className={styles['login-page__picture']}>\n        <img src={LogoSvg} alt=\"Лого выборов мэра Москвы 2\" />\n      </div>\n      <div className={styles['login-page__content-container']}>\n        <div className={styles['content']}>\n          <Formik\n            initialValues={{ login: '', password: '' }}\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              fetchLogin(values.login, values.password);\n            }}>\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isValid,\n            }) => (\n              <form onSubmit={handleSubmit} className={styles['login-form']}>\n                <ErrorAlert\n                  header=\"Неверный логин или пароль\"\n                  description=\"Проверьте вводимые данные\"\n                  className={classNames(\n                    styles['login-form__main-error'],\n                    errorLogin ? styles['login-form__main-error_showing'] : null,\n                  )}\n                />\n                <p className={styles['login-form__description']}>\n                  Введите логин и пароль\n                </p>\n\n                <FormInput\n                  labelName=\"Логин\"\n                  id=\"login\"\n                  name=\"login\"\n                  type=\"text\"\n                  value={values.login}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  errorMessage={errors.login || ''}\n                  required={true}\n                  showError={!!(touched.login && errors.login)}\n                  placeholder=\"Ваш логин\"\n                />\n\n                <FormInput\n                  labelName=\"Пароль\"\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  errorMessage={errors.password || ''}\n                  required={true}\n                  showError={!!(touched.password && errors.password)}\n                  hasIcon\n                  iconUrl={EyeSvg}\n                />\n                <FormButton type=\"submit\" disabled={isTryingToLogin && !isValid}>\n                  {isTryingToLogin ? <LoadingSpinner /> : 'Войти'}\n                </FormButton>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/candidate.1a01f90d.jpg\";","import { FC } from 'react';\n\nimport PhotoExample from '../../../img/candidate.jpg';\nimport styles from './styles.module.scss';\n\ninterface PhotoItemProps {\n  candidate: {\n    candidate_id: number;\n    candidate: string;\n    consigment: string;\n  };\n}\n\nconst PhotoItem: FC<PhotoItemProps> = (props) => {\n  const { candidate, consigment, candidate_id } = props.candidate;\n  return (\n    <div className={styles['photo-item']}>\n      <img\n        src={PhotoExample}\n        alt={`${candidate_id}_${candidate}`}\n        className={styles['photo-item__img']}\n      />\n      <h2 className={styles['photo-item__surname']}>{candidate.split(' ')[0]}</h2>\n      <p className={styles['photo-item__name']}>\n        {' '}\n        {candidate.split(' ').slice(-2).join(' ')}\n      </p>\n      <p className={styles['photo-item__consigment']}>«{consigment}»</p>\n    </div>\n  );\n};\n\nexport default PhotoItem;\n","import classNames from 'classnames';\nimport { FC } from 'react';\n\nimport PhotoItem from './PhotoItem/PhotoItem';\nimport styles from './styles.module.scss';\n\ninterface PhotosListProps {\n  className?: string;\n  candidates: Array<{\n    candidate_id: number;\n    candidate: string;\n    consigment: string;\n  }>;\n}\n\nconst PhotosList: FC<PhotosListProps> = ({ className, candidates }) => {\n  return (\n    <div\n      className={classNames(\n        styles['photo-list'],\n        candidates.length === 0 ? styles['photo-list_empty'] : null,\n        className ? className : null,\n      )}>\n      {candidates.length === 0 ? (\n        <div className={styles['photo-list__error']}>\n          <span className={styles['error-text']}>Список кандидатов пуст</span>\n        </div>\n      ) : (\n        candidates.map((item) => <PhotoItem key={item.candidate_id} candidate={item} />)\n      )}\n    </div>\n  );\n};\n\nexport default PhotosList;\n","import classNames from 'classnames';\nimport { FC, memo, useEffect, useState } from 'react';\n\nimport VotingService from '../../../../api/votingService';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport PhotosList from '../../../../components/PhotosList/PhotosList';\nimport styles from './styles.module.scss';\n\nconst CandidatesList: FC = memo(function CandidatesList() {\n  const [areasInfo, setAreasInfo] = useState({\n    isOpenedCount: 0,\n    peopleCount: 0,\n  });\n  const [candidates, setCandidates] = useState<\n    {\n      candidate_id: number;\n      candidate: string;\n      consigment: string;\n    }[]\n  >([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const beautyNumber = (value: number) => {\n    return ('' + value)\n      .split('')\n      .reverse()\n      .reduce((prev, current, index) => {\n        return index % 3 === 0 && index !== 0\n          ? '' + prev + ' ' + current\n          : '' + prev + current;\n      })\n      .split('')\n      .reverse()\n      .join('');\n  };\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getCandidatesAndAreasInfo()).data;\n        setAreasInfo({\n          isOpenedCount: result.count_opened,\n          peopleCount: result.count_people,\n        });\n        setCandidates(result.info);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        styles['candidates'],\n        isError || isLoading ? styles['candidates_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['candidates__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['candidates__error']}>\n          <span className={styles['error-text']}>Произошла ошибка</span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Попробовать ещё раз\n          </FormButton>\n        </div>\n      ) : (\n        <>\n          <div\n            className={classNames(\n              styles['candidates__voting-areas'],\n              styles['voting-areas'],\n            )}>\n            <div className={styles['voting-areas__info-block']}>\n              <span className={styles['voting-areas__name']}>Участков открыто</span>\n              <div className={styles['voting-areas__value']}>\n                {beautyNumber(areasInfo.isOpenedCount)}\n              </div>\n            </div>\n            <div className={styles['voting-areas__info-block']}>\n              <span className={styles['voting-areas__name']}>\n                Число жителей на участках\n              </span>\n              <div className={styles['voting-areas__value']}>\n                {beautyNumber(areasInfo.peopleCount)}\n              </div>\n            </div>\n          </div>\n          <PhotosList\n            className={styles['candidates__candidates-list']}\n            candidates={candidates}\n          />\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default CandidatesList;\n","import { useEffect, useState } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { FC, memo, useEffect, useState } from 'react';\n\nimport PhotoExample from '../../../img/candidate.jpg';\nimport styles from './styles.module.scss';\n\nexport interface ResultModel {\n  id: number;\n  surname: string;\n  name: string;\n  result: number;\n}\n\ninterface ResultItemProps {\n  result: {\n    candidate: string;\n    result: number;\n  };\n  isMobileScreen: boolean;\n}\n\nconst ResultItem: FC<ResultItemProps> = memo(function ResultItem(props) {\n  const [style, setStyle] = useState<any>(null);\n  const {\n    result: { candidate, result },\n    isMobileScreen,\n  } = props;\n  useEffect(() => {\n    setTimeout(() => {\n      if (isMobileScreen) {\n        setStyle({\n          width: `calc( 50% * ${result * 0.01} )`,\n        });\n      } else {\n        setStyle({\n          height: `calc( 17vh * ${result * 0.01} )`,\n        });\n      }\n    }, 100);\n  }, [result, isMobileScreen]);\n  return (\n    <div className={styles['result-item']}>\n      <span className={styles['result-item__percent']}>{result}%</span>\n      <div className={styles['result-item__graph']} style={style}></div>\n      <div className={styles['result-item__candidate']}>\n        <img\n          src={PhotoExample}\n          alt={`фото ${candidate}`}\n          className={styles['result-item__photo']}\n        />\n        <h2 className={styles['result-item__name']}>\n          <span>{candidate.split(' ')[1]}</span>\n          <span className={styles['result-item__name_uppercase']}>\n            {candidate.split(' ')[0]}\n          </span>\n        </h2>\n      </div>\n    </div>\n  );\n});\n\nexport default ResultItem;\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\n\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport ResultItem from './ResultItem/ResultItem';\nimport styles from './styles.module.scss';\n\ninterface PhotosListProps {\n  className?: string;\n  candidates: Array<{\n    candidate_id: number;\n    candidate: string;\n    result: number;\n  }>;\n}\n\nconst ResultsList: FC<PhotosListProps> = ({ className, candidates }) => {\n  const [isMobileScreen, setMobileScreen] = useState(\n    document.documentElement.clientWidth <= 1024,\n  );\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    if (width <= 1300 && !isMobileScreen) {\n      setMobileScreen(true);\n    } else if (width > 1300 && isMobileScreen) {\n      setMobileScreen(false);\n    }\n  }, [width]);\n\n  return (\n    <div className={classNames(styles['results-list'], className ? className : null)}>\n      {candidates\n        .sort((a, b) => {\n          if (a.result > b.result) {\n            return -1;\n          }\n          if (a.result < b.result) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((item) => (\n          <ResultItem\n            key={item.candidate_id}\n            result={item}\n            isMobileScreen={isMobileScreen}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default ResultsList;\n","import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback: () => void, delay: number) {\n  const intervalRef = useRef(null as any);\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const tick = () => savedCallback.current();\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay);\n      return () => window.clearInterval(intervalRef.current);\n    }\n  }, [delay]);\n\n  return intervalRef;\n}\n\nexport default useInterval;\n","import React from 'react';\n\nimport Employee from '../pages/employee/Employee';\nimport Login from '../pages/login/Login';\nimport Main from '../pages/main/Main';\n\nexport interface IRoute {\n  path?: string;\n  component: React.ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  MAIN_PAGE = '/',\n  MAIN_PAGE_SCREENS = '/main',\n  LOGIN_PAGE = '/login',\n  EMPLOYEE_PAGE = '/employee-page',\n}\n\nexport const publicRoutes: IRoute[] = [\n  {\n    path: RouteNames.MAIN_PAGE,\n    exact: true,\n    component: Main,\n  },\n  {\n    path: RouteNames.MAIN_PAGE_SCREENS,\n    component: Main,\n  },\n  {\n    path: RouteNames.LOGIN_PAGE,\n    component: Login,\n  },\n];\n\nexport const privateRoutes: IRoute[] = [\n  {\n    path: RouteNames.EMPLOYEE_PAGE,\n    component: Employee,\n  },\n];\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\n\nimport VotingService from '../../../../api/votingService';\nimport FormButton from '../../../../components/FormButton/FormButton';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport ResultsList from '../../../../components/ResultsList/ResultsList';\nimport useInterval from '../../../../hooks/useInterval';\nimport styles from './styles.module.scss';\n\nconst Results: FC = () => {\n  const [votesInfo, setVotesInfo] = useState({\n    turnout: 0,\n    checked_bulletins: 0,\n  });\n  const [candidates, setCandidates] = useState<\n    {\n      candidate_id: number;\n      candidate: string;\n      result: number;\n    }[]\n  >([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const fetchInfo = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getResultsInfo()).data;\n        setVotesInfo({\n          turnout: result.turnout,\n          checked_bulletins: result.checked_bulletins_percentage,\n        });\n        setCandidates(result.candidate_results);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  const silentFetchInfo = async () => {\n    try {\n      const result = (await VotingService.getResultsInfo()).data;\n      setVotesInfo({\n        turnout: result.turnout,\n        checked_bulletins: result.checked_bulletins_percentage,\n      });\n      setCandidates(result.candidate_results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  useInterval(() => {\n    silentFetchInfo();\n  }, 15000);\n\n  return (\n    <div\n      className={classNames(\n        styles['results'],\n        isError || isLoading ? styles['results_empty'] : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['results__loader']} isPrimaryColor />\n      ) : isError ? (\n        <div className={styles['results__error']}>\n          <span className={styles['error-text']}>Произошла ошибка</span>\n          <FormButton\n            type=\"button\"\n            disabled={false}\n            className={styles['error-btn']}\n            onClick={fetchInfo}>\n            Попробовать ещё раз\n          </FormButton>\n        </div>\n      ) : (\n        <>\n          <div className={styles['results__statistics']}>\n            <p className={styles['info']}>\n              Явка - <span className={styles['info__result']}>{votesInfo.turnout}%</span>\n            </p>\n            <p className={styles['info']}>\n              Голосов обработано -{' '}\n              <span className={styles['info__result']}>\n                {votesInfo.checked_bulletins}%\n              </span>\n            </p>\n          </div>\n          <ResultsList className={styles['results__list']} candidates={candidates} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import { FC, memo, useEffect, useState } from 'react';\n\nimport styles from './styles.module.scss';\n\ninterface TurnoutItemProps {\n  turnoutInfo: {\n    district: string;\n    turnout: number;\n  };\n  isMobileScreen: boolean;\n}\n\nconst TurnoutItem: FC<TurnoutItemProps> = memo(function TurnoutItem(props) {\n  const [style, setStyle] = useState<any>(null);\n  const {\n    turnoutInfo: { turnout, district },\n    isMobileScreen,\n  } = props;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setStyle({\n        width: `calc( ${isMobileScreen ? 35 : 65}% * ${turnout * 0.01} )`,\n      });\n    }, 100);\n  }, [turnout, isMobileScreen]);\n\n  return (\n    <div className={styles['turnout-item']}>\n      <h3 className={styles['turnout-item__district']}>{district}</h3>\n      <div className={styles['turnout-item__graph']} style={style} />\n      <span className={styles['turnout-item__percent']}>{Math.floor(turnout)}%</span>\n    </div>\n  );\n});\n\nexport default TurnoutItem;\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\n\nimport VotingService from '../../api/votingService';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport FormButton from '../FormButton/FormButton';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport styles from './styles.module.scss';\nimport TurnoutItem from './TurnoutItem/TurnoutItem';\n\ninterface TurnoutListProps {\n  className?: string;\n}\n\nconst TurnoutList: FC<TurnoutListProps> = ({ className }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [turnout, setTurnout] = useState<\n    {\n      district: string;\n      turnout: number;\n    }[]\n  >([]);\n  const [isMobileScreen, setMobileScreen] = useState(\n    document.documentElement.clientWidth <= 768,\n  );\n  const { width } = useWindowDimensions();\n  const fetchTurnout = async () => {\n    try {\n      setIsLoading(true);\n      setIsError(false);\n      setTimeout(async () => {\n        const result = (await VotingService.getDistrictsTurnout()).data;\n        console.log(result.districts_turnout);\n        setTurnout(result.districts_turnout);\n        setIsLoading(false);\n      }, 500);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTurnout();\n  }, []);\n\n  useEffect(() => {\n    if (width <= 768 && !isMobileScreen) {\n      setMobileScreen(true);\n    } else if (width > 768 && isMobileScreen) {\n      setMobileScreen(false);\n    }\n  }, [width]);\n  return (\n    <div\n      className={classNames(\n        styles['turnout-list'],\n        isError || isLoading || turnout.length === 0\n          ? styles['turnout-list_empty']\n          : null,\n        className ? className : null,\n      )}>\n      {isLoading ? (\n        <LoadingSpinner className={styles['turnout-list__loader']} isPrimaryColor />\n      ) : isError || turnout.length === 0 ? (\n        <div className={styles['turnout-list__error']}>\n          {turnout.length === 0 ? (\n            <span className={styles['error-text']}>Список пустой</span>\n          ) : (\n            <>\n              <span className={styles['error-text']}>Произошла ошибка</span>\n              <FormButton\n                type=\"button\"\n                disabled={false}\n                className={styles['error-btn']}\n                onClick={fetchTurnout}>\n                Попробовать ещё раз\n              </FormButton>\n            </>\n          )}\n        </div>\n      ) : (\n        turnout.map((item, index) => (\n          <TurnoutItem key={index} turnoutInfo={item} isMobileScreen={isMobileScreen} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default TurnoutList;\n","import { FC, memo } from 'react';\n\nimport TurnoutList from '../../../../components/TurnoutList/TurnoutList';\nimport styles from './styles.module.scss';\n\nconst Turnout: FC = memo(function Turnout() {\n  console.log('Turnout render');\n\n  return (\n    <div className={styles['turnout']}>\n      <h2 className={styles['turnout__header']}>\n        Явка на&nbsp;<span className={styles['clock']}>18:00</span>\n      </h2>\n      <TurnoutList className={styles['turnout__list']} />\n    </div>\n  );\n});\n\nexport default Turnout;\n","import { FC, useContext, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Header from '../../components/Header/Header';\nimport TimeContext from '../../context/timeContext';\nimport history from '../../utils/history';\nimport CandidatesList from './pages/candidatesList/CandidatesList';\nimport Results from './pages/results/Results';\nimport Turnout from './pages/turnout/Turnout';\nimport styles from './styles.module.scss';\n\nconst Main: FC = () => {\n  const {\n    time: { minutes, hours },\n  } = useContext(TimeContext);\n\n  useEffect(() => {\n    if (hours < 18 && history.location.pathname !== '/main/candidates-list') {\n      history.push('/main/candidates-list');\n    }\n    if (\n      (hours === 18 && minutes === 0) ||\n      (hours >= 18 && hours < 21 && history.location.pathname !== '/main/turnout')\n    ) {\n      history.push('/main/turnout');\n    }\n    if (\n      (hours === 21 && minutes === 0) ||\n      (hours >= 21 && history.location.pathname !== '/main/results')\n    ) {\n      history.push('/main/results');\n    }\n  }, [minutes, hours]);\n\n  return (\n    <div className={styles['main']}>\n      <Header className={styles['main__header']} />\n      <Switch>\n        <Route path=\"/main/candidates-list\" component={CandidatesList} />\n        <Route path=\"/main/turnout\" component={Turnout} />\n        <Route path=\"/main/results\" component={Results} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { RouteNames } from '../../routes';\nimport styles from './styles.module.css';\n\nconst NotFound: FC = () => {\n  return (\n    <div className={styles['container']}>\n      <p>Упс, страница не найдена</p>\n      <NavLink className={styles['button']} to={RouteNames.MAIN_PAGE}>\n        На главную\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { FC } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport NotFound from '../pages/notFound/NotFound';\nimport { privateRoutes, publicRoutes } from '../routes';\n\nconst AppRouter: FC = () => {\n  return (\n    <Switch>\n      {publicRoutes.map((route) => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      {privateRoutes.map((route) => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import classNames from 'classnames';\nimport { FC, FormEvent, useContext, useEffect, useState } from 'react';\n\nimport TimeContext from '../../context/timeContext';\nimport styles from './styles.module.scss';\n\nconst DevTimeInput: FC = () => {\n  const [hours, setHours] = useState('0');\n  const [minutes, setMinutes] = useState('0');\n  const [isDevUsing, setIsDevUsing] = useState(false);\n  const { setCustomTime, clearCustomTime, time } = useContext(TimeContext);\n  useEffect(() => {\n    let savedHours = localStorage.getItem('devTimeHours');\n    let savedMinutes = localStorage.getItem('devTimeMinutes');\n    let realTimeSeconds = localStorage.getItem('devRealTimeSeconds');\n    if (savedHours && savedMinutes && realTimeSeconds) {\n      setCustomTime(\n        parseInt(savedHours, 10),\n        parseInt(savedMinutes, 10),\n        parseInt(realTimeSeconds, 10),\n      );\n      setIsDevUsing(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isDevUsing) {\n      setHours(time.hours.toString());\n      setMinutes(time.minutes.toString());\n    }\n  }, [isDevUsing, time]);\n\n  return (\n    <form\n      className={classNames(\n        styles['dev-time'],\n        isDevUsing ? styles['dev-time_using'] : null,\n      )}\n      onSubmit={(e) => {\n        e.preventDefault();\n        setCustomTime(\n          parseInt(hours, 10),\n          parseInt(minutes, 10),\n          Math.floor(new Date().getTime() / 1000),\n        );\n        setIsDevUsing(true);\n        localStorage.setItem('devTimeHours', hours.toString());\n        localStorage.setItem('devTimeMinutes', minutes.toString());\n        localStorage.setItem(\n          'devRealTimeSeconds',\n          Math.floor(new Date().getTime() / 1000).toString(),\n        );\n      }}>\n      <label htmlFor=\"hours\">\n        часы{' '}\n        <input\n          type=\"number\"\n          id=\"hours\"\n          value={hours}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            setHours(e.currentTarget.value);\n          }}\n          required\n        />\n      </label>\n\n      <label htmlFor=\"minutes\">\n        минуты{' '}\n        <input\n          type=\"number\"\n          id=\"minutes\"\n          value={minutes}\n          onChange={(e: FormEvent<HTMLInputElement>) => setMinutes(e.currentTarget.value)}\n          required\n        />\n      </label>\n      <button type=\"submit\">Изменить</button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          clearCustomTime();\n          setHours('0');\n          setMinutes('0');\n          setIsDevUsing(false);\n          localStorage.removeItem('devTimeHours');\n          localStorage.removeItem('devTimeMinutes');\n          localStorage.removeItem('devRealTimeSeconds');\n        }}>\n        Очистить\n      </button>\n      {isDevUsing ? <small>Используются тестовые значения!</small> : null}\n    </form>\n  );\n};\n\nexport default DevTimeInput;\n","import './App.css';\n\nimport { FC, useEffect } from 'react';\n\nimport AppRouter from './components/AppRouter';\nimport DevTimeInput from './components/DevTimeInput/DevTimeInput';\nimport TimeContext from './context/timeContext';\nimport { useActions } from './hooks/useActions';\nimport { useDate } from './hooks/useDate';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { RouteNames } from './routes';\nimport history from './utils/history';\n\nconst App: FC = () => {\n  const { fetchRefreshTokens } = useActions();\n  const { access_token, isFirstRefreshDone } = useTypedSelector((state) => state.auth);\n  const { time, day, setCustomTime, clearCustomTime } = useDate();\n\n  useEffect(() => {\n    fetchRefreshTokens();\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRefreshDone) {\n      if (history.location.pathname === RouteNames.LOGIN_PAGE) {\n        if (access_token) history.push(RouteNames.EMPLOYEE_PAGE);\n      }\n      if (history.location.pathname.includes(RouteNames.EMPLOYEE_PAGE)) {\n        if (!access_token) history.push(RouteNames.LOGIN_PAGE);\n      }\n    }\n  }, [access_token, history.location.pathname, isFirstRefreshDone]);\n  return (\n    <TimeContext.Provider value={{ time, day, setCustomTime, clearCustomTime }}>\n      <div className=\"wrapper\">\n        <DevTimeInput />\n        {!isFirstRefreshDone ? <span>Загрузка</span> : <AppRouter />}\n      </div>\n    </TimeContext.Provider>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nimport useInterval from './useInterval';\n\nexport const useDate = () => {\n  const [date, setDate] = useState(new Date());\n  const [devTime, setDevTime] = useState<\n    { hours: number; minutes: number; realTimeInSeconds: number } | null | undefined\n  >(undefined);\n\n  const updateDevTime = (curTime?: Date) => {\n    const currentTime = curTime || new Date();\n    let passedSeconds =\n      Math.floor(currentTime.getTime() / 1000) - devTime!.realTimeInSeconds;\n    let passedHours = Math.floor(passedSeconds / 3600);\n    let passedMinutes = Math.floor((passedSeconds - passedHours * 3600) / 60);\n    setDate(\n      new Date(\n        currentTime.getFullYear(),\n        currentTime.getMonth(),\n        currentTime.getDay(),\n        devTime!.hours + passedHours,\n        devTime!.minutes + passedMinutes,\n      ),\n    );\n  };\n\n  useInterval(() => {\n    const currentTime = new Date();\n    if (devTime) {\n      if (\n        (Math.floor(currentTime.getTime() / 1000) - devTime.realTimeInSeconds) % 60 ===\n          0 &&\n        Math.floor(currentTime.getTime() / 1000) - devTime.realTimeInSeconds !== 0\n      ) {\n        updateDevTime(currentTime);\n      }\n    } else {\n      if (currentTime.getSeconds() === 0) setDate(currentTime);\n    }\n  }, 1000);\n\n  useEffect(() => {\n    const time = new Date();\n    if (!devTime) setDate(time);\n    else updateDevTime(time);\n  }, [devTime]);\n\n  const setCustomTime = (hours: number, minutes: number, realTimeInSeconds?: number) => {\n    setDevTime({\n      hours,\n      minutes,\n      realTimeInSeconds: realTimeInSeconds || Math.floor(new Date().getTime() / 1000),\n    });\n  };\n\n  const clearCustomTime = () => {\n    setDevTime(null);\n  };\n\n  return {\n    day: date.getDate(),\n    time: {\n      hours: date.getHours(),\n      minutes: date.getMinutes(),\n    },\n    setCustomTime,\n    clearCustomTime,\n  };\n};\n","import './styles/normalize.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\nimport history from './utils/history';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result-item\":\"styles_result-item__1ZrcL\",\"result-item__percent\":\"styles_result-item__percent__20SNg\",\"result-item__graph\":\"styles_result-item__graph__2sG-B\",\"result-item__candidate\":\"styles_result-item__candidate__1xKvy\",\"result-item__photo\":\"styles_result-item__photo__1E3jm\",\"result-item__name\":\"styles_result-item__name__12St9\",\"result-item__name_uppercase\":\"styles_result-item__name_uppercase__1Mw-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"turnout-list\":\"styles_turnout-list__31Bgo\",\"turnout-list_empty\":\"styles_turnout-list_empty__2BY7D\",\"turnout-list__error\":\"styles_turnout-list__error__1usZt\",\"error-text\":\"styles_error-text__2jdZF\",\"error-btn\":\"styles_error-btn__2t6iU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-alert\":\"styles_error-alert__3ro0p\",\"error-alert__icon\":\"styles_error-alert__icon__1hlEB\",\"error-alert__content\":\"styles_error-alert__content__2b48I\",\"error-alert__header\":\"styles_error-alert__header__3akAw\",\"error-alert__description\":\"styles_error-alert__description__3WtY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo-item\":\"styles_photo-item__m7oOD\",\"photo-item__img\":\"styles_photo-item__img__1QgZI\",\"photo-item__surname\":\"styles_photo-item__surname__33mco\",\"photo-item__name\":\"styles_photo-item__name__17yFg\",\"photo-item__consigment\":\"styles_photo-item__consigment__1TKbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2dQfB\",\"header__clock\":\"styles_header__clock__1_RRe\",\"header__logo\":\"styles_header__logo__3woUs\",\"header__clock_hidden\":\"styles_header__clock_hidden__3TNIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo-list\":\"styles_photo-list__I-PQD\",\"photo-list_empty\":\"styles_photo-list_empty__dCuTt\",\"photo-list__error\":\"styles_photo-list__error__kmi0k\",\"error-text\":\"styles_error-text__3ju8S\",\"error-btn\":\"styles_error-btn__3ikSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"turnout-item\":\"styles_turnout-item__3m59A\",\"turnout-item__district\":\"styles_turnout-item__district__jTQ6J\",\"turnout-item__graph\":\"styles_turnout-item__graph__3pCm2\",\"turnout-item__percent\":\"styles_turnout-item__percent__2A4_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"turnout\":\"styles_turnout__1CB4i\",\"turnout__header\":\"styles_turnout__header__2_1VN\",\"clock\":\"styles_clock__NR3Pw\",\"turnout__list\":\"styles_turnout__list__2ygO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"protocol\":\"styles_protocol__2Ea4p\",\"protocol_empty\":\"styles_protocol_empty__2wJy_\",\"protocol__error\":\"styles_protocol__error__3GD3h\",\"error-text\":\"styles_error-text__3licd\",\"error-btn\":\"styles_error-btn__XpIa2\",\"protocol__form\":\"styles_protocol__form__10o8a\",\"protocol-form\":\"styles_protocol-form__3HE0s\",\"protocol-form__wrapper\":\"styles_protocol-form__wrapper__3dBRn\",\"protocol-form__bulletins\":\"styles_protocol-form__bulletins__1SjkQ\",\"bulletins__input\":\"styles_bulletins__input__lhpDj\",\"protocol-form__votes\":\"styles_protocol-form__votes__4q8Fe\",\"votes__candidate-list\":\"styles_votes__candidate-list__1Z6Vp\",\"votes__input-block\":\"styles_votes__input-block__1qSEU\",\"votes__input-block_error\":\"styles_votes__input-block_error__arxb1\",\"votes__label\":\"styles_votes__label__2aD7I\",\"votes__input\":\"styles_votes__input__J4k3x\",\"protocol-form__description\":\"styles_protocol-form__description__1SWlH\",\"protocol-form__main-error\":\"styles_protocol-form__main-error__34sRy\",\"protocol-form__main-error_hidden\":\"styles_protocol-form__main-error_hidden__1utUy\",\"protocol-form__time-left\":\"styles_protocol-form__time-left__1fF-H\",\"protocol-form__time-left_hidden\":\"styles_protocol-form__time-left_hidden__m8zlh\",\"protocol-form__submit-btn\":\"styles_protocol-form__submit-btn__1IhtF\",\"bulletins__input-block\":\"styles_bulletins__input-block__2rdhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__3kNkA\",\"spinner_primary-color\":\"styles_spinner_primary-color__3-KJ3\",\"spin\":\"styles_spin__MjjZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__24-fu\",\"main__header\":\"styles_main__header__y51-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__20my1\",\"button\":\"styles_button__3omc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dev-time\":\"styles_dev-time__18MSc\",\"dev-time_using\":\"styles_dev-time_using__3RbwX\"};"],"sourceRoot":""}